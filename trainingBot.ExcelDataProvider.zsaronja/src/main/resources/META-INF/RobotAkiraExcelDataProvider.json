{"id":"RobotAkiraExcelDataProvider","robotType":"NANO","mainClass":"com.serengetitech.appian.robot.test.RobotAkiraExcelDataProvider","actions":["init","end","cleanUp"],"conditionalActions":["hasMoreItems"],"fieldLinks":[],"actionDetails":[{"id":"init","implementation":"@Override\npublic void init() throws Exception {\n    server = getServer();\n    dataProvider = IJidokaDataProvider.getInstance((IRobot) this, IJidokaDataProvider.Provider.EXCEL);\n    INano.super.init();\n}"},{"id":"end","implementation":"/**\n     * Last action of the robot.\n     */\npublic void end() {\n    server.info(\"End process\");\n}"},{"id":"cleanUp","implementation":"/**\n     * Cleans up.\n     *\n     * Besides returning the updated Excel file, it closes the data\n     * provider.\n     *\n     * @throws Exception\n     *             in case any exception is thrown\n     *\n     * @see INano#cleanUp()\n     */\n@Override\npublic void cleanUp() throws Exception {\n    closeDataProvider();\n    INano.super.cleanUp();\n}"}],"conditionalActionDetails":[{"id":"hasMoreItems","implementation":"/**\n     * Checks for more items.\n     *\n     * @return the string representing the wire name in the workflow to follow.\n     */\npublic String hasMoreItems() {\n    // To get the next row, we rely again on the Data Provider module\n    return dataProvider.nextRow() ? \"yes\" : \"no\";\n}"}],"sdkMethods":[{"id":"getEmployees","returnClazz":"void","attributes":{"returnClass":"AS_DEFINED","name":"Get Employees","description":"Read Employee data from AKIRA Excel report.","iconClass":"jf-console"},"parameters":[{"id":"arg0","clazz":"java.lang.String","enumValues":[],"attributes":{"jsonMap":"","defaultValue":"","name":"Excel report to read from (path)","type":"AS_DEFINED"},"nestedParameters":[]}],"commonActions":["PAUSE","TAKE_SCREENSHOT"]}]}